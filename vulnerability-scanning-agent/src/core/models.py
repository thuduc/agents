#!/usr/bin/env python3
"""
Core data models for vulnerability scanning
"""

import os
from datetime import datetime
from typing import Dict, List, Optional, Set, Tuple, Any
from dataclasses import dataclass, asdict
from enum import Enum


@dataclass
class Config:
    """Main configuration for vulnerability scanning agent"""
    # BitBucket Configuration
    bitbucket_workspace: str = os.getenv('BITBUCKET_WORKSPACE', '')
    bitbucket_username: str = os.getenv('BITBUCKET_USERNAME', '')
    bitbucket_app_password: str = os.getenv('BITBUCKET_APP_PASSWORD', '')
    
    # CVE Database APIs
    nvd_api_key: str = os.getenv('NVD_API_KEY', '')
    snyk_api_token: str = os.getenv('SNYK_API_TOKEN', '')
    oss_index_username: str = os.getenv('OSS_INDEX_USERNAME', '')
    oss_index_token: str = os.getenv('OSS_INDEX_TOKEN', '')
    
    # DynamoDB Configuration
    dynamodb_region: str = os.getenv('AWS_REGION', 'us-east-1')
    dynamodb_table_prefix: str = os.getenv('DYNAMODB_TABLE_PREFIX', 'vuln-scanner')
    
    # Scanning Configuration
    scan_schedule: str = os.getenv('SCAN_SCHEDULE', '0 2 * * *')  # Daily at 2 AM
    max_concurrent_scans: int = int(os.getenv('MAX_CONCURRENT_SCANS', '5'))
    scan_timeout: int = int(os.getenv('SCAN_TIMEOUT', '300'))  # 5 minutes


class SeverityLevel(Enum):
    """Vulnerability severity levels"""
    CRITICAL = "CRITICAL"
    HIGH = "HIGH"
    MEDIUM = "MEDIUM"
    LOW = "LOW"
    INFO = "INFO"


@dataclass
class Vulnerability:
    """Vulnerability data model"""
    cve_id: str
    package_name: str
    affected_version: str
    severity: SeverityLevel
    description: str
    cvss_score: float
    published_date: datetime
    references: List[str]
    source: str  # NVD, OSS_INDEX, SNYK


@dataclass
class ScanResult:
    """Scan result container"""
    scan_id: str
    repository: str
    vulnerabilities: List[Vulnerability]
    scan_timestamp: datetime
    duration_seconds: float
    status: str  # SUCCESS, FAILED, PARTIAL


@dataclass  
class Repository:
    """Repository metadata"""
    name: str
    full_name: str
    language: str
    last_scan: Optional[datetime] = None
    total_vulnerabilities: int = 0
    critical_count: int = 0
    high_count: int = 0
    medium_count: int = 0
    low_count: int = 0


@dataclass
class DependencyFile:
    """Dependency file information"""
    file_path: str
    content: str
    repository: str
    file_type: str  # requirements.txt, setup.py, pyproject.toml